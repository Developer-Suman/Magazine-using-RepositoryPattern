// <auto-generated />
using System;
using Megazine_Practice.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Megazine_Practice.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230313020245_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Megazine_Practice.Models.Articles", b =>
                {
                    b.Property<int>("Articles_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Articles_Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Employee_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Articles_Id");

                    b.HasIndex("Employee_Id");

                    b.ToTable("articles");
                });

            modelBuilder.Entity("Megazine_Practice.Models.Employee", b =>
                {
                    b.Property<int>("Employee_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Employee_Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employee_Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Joining_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Martial_Status")
                        .HasColumnType("int");

                    b.HasKey("Employee_Id");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("Megazine_Practice.Models.Journal", b =>
                {
                    b.Property<int>("Journal_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Journal_Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Employee_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<string>("JournalImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Journal_Id");

                    b.HasIndex("Employee_Id");

                    b.ToTable("journals");
                });

            modelBuilder.Entity("Megazine_Practice.Models.News", b =>
                {
                    b.Property<int>("News_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("News_Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Employee_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<string>("NewsImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("News_Id");

                    b.HasIndex("Employee_Id");

                    b.ToTable("news");
                });

            modelBuilder.Entity("Megazine_Practice.Models.UserActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActivityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserActivities");
                });

            modelBuilder.Entity("Megazine_Practice.Models.Articles", b =>
                {
                    b.HasOne("Megazine_Practice.Models.Employee", "EmployeeModels")
                        .WithMany()
                        .HasForeignKey("Employee_Id");

                    b.Navigation("EmployeeModels");
                });

            modelBuilder.Entity("Megazine_Practice.Models.Journal", b =>
                {
                    b.HasOne("Megazine_Practice.Models.Employee", "EmployeeModels")
                        .WithMany()
                        .HasForeignKey("Employee_Id");

                    b.Navigation("EmployeeModels");
                });

            modelBuilder.Entity("Megazine_Practice.Models.News", b =>
                {
                    b.HasOne("Megazine_Practice.Models.Employee", "EmployeeModels")
                        .WithMany()
                        .HasForeignKey("Employee_Id");

                    b.Navigation("EmployeeModels");
                });
#pragma warning restore 612, 618
        }
    }
}
